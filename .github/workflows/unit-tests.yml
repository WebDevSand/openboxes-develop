name: Unit tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v1
      with:
        path: /home/runner/work/openboxes/openboxes/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Cache .ivy2
      uses: actions/cache@v1
      with:
        path: /home/runner/.ivy2
        key: ${{ runner.os }}-ivy2-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        restore-keys: |
          ${{ runner.os }}-ivy2-
    - name: Cache .grails
      uses: actions/cache@v1
      with:
        path: /home/runner/.grails
        key: ${{ runner.os }}-.grails-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        restore-keys: |
          ${{ runner.os }}-.grails-
    - name: Cache grails-1.3.9
      uses: actions/cache@v1
      id: grails
      with:
        path: /home/runner/grails-1.3.9
        key: ${{ runner.os }}-grails-1.3.9-${{ hashFiles('**/grails-app/conf/BuildConfig.groovy') }}
        restore-keys: |
          ${{ runner.os }}-grails-1.3.9

    - name: Set up JDK 1.7
      uses: actions/setup-java@v1
      with:
        java-version: 1.7
    - name: Install grails 1.3.9
      uses: sdkman/sdkman-action@master
      id: sdkman
      if: steps.grails.outputs.cache-hit != 'true'
      with:
        candidate: grails
        version: 1.3.9
    - name: Unzip grails
      shell: bash
      if: steps.grails.outputs.cache-hit != 'true'
      run: unzip -o ${{ steps.sdkman.outputs.file }} -d $HOME/
    - name: npm install
      run: npm install
    - name: npm run bundle
      run: npm run bundle

    - name: grails test-app :unit
      run: '$HOME/grails-1.3.9/bin/grails test-app unit: --non-interactive -echoOut -echoErr'
    - name: npm test
      run: npm test
